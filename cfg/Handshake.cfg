#!/usr/bin/env python
PACKAGE = "move_by_ft_wrist"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("rate", int_t, 0, "node rate",    10, 0,   100)
gen.add("send_goals", bool_t, 0, "send goals to real topic", False)

gen.add("min_x", double_t, 0, "workspace min_x",    0.0, -2.0,   2.0)
gen.add("max_x", double_t, 0, "workspace max_x",    0.6, -2.0,   2.0)
gen.add("min_y", double_t, 0, "workspace min_y",    -0.5, -2.0,   2.0)
gen.add("max_y", double_t, 0, "workspace max_y",    -0.05, -2.0,   2.0)
gen.add("min_z", double_t, 0, "workspace min_z",    -0.2, -2.0,   2.0)
gen.add("max_z", double_t, 0, "workspace max_z",    0.2, -2.0,   2.0)

gen.add("fx_scaling", double_t, 0, "force x scaling",    0.0, 0.0,   10.0)
gen.add("fy_scaling", double_t, 0, "force y scaling",    0.0, 0.0,   10.0)
gen.add("fz_scaling", double_t, 0, "force z scaling",    0.0, 0.0,   10.0)

gen.add("fx_deadband", double_t, 0, "force x deadband",    20.0, 0.0,   100.0)
gen.add("fy_deadband", double_t, 0, "force y deadband",    20.0, 0.0,   100.0)
gen.add("fz_deadband", double_t, 0, "force z deadband",    20.0, 0.0,   100.0)

gen.add("tx_scaling", double_t, 0, "torque x scaling",    0.0, 0.0,   10.0)
gen.add("ty_scaling", double_t, 0, "torque y scaling",    0.0, 0.0,   10.0)
gen.add("tz_scaling", double_t, 0, "torque z scaling",    0.0, 0.0,   10.0)

gen.add("tx_deadband", double_t, 0, "torque x deadband",    1.0, 0.0,   10.0)
gen.add("ty_deadband", double_t, 0, "torque y deadband",    1.0, 0.0,   10.0)
gen.add("tz_deadband", double_t, 0, "torque z deadband",    1.0, 0.0,   10.0)

gen.add("axis_force", str_t, 0, "string with the axes to correct on force", "zxy")
gen.add("sign_force", str_t, 0, "string with the signs +++", "+++")
gen.add("axis_torque", str_t, 0, "string with the axes to correct on torque", "zxy")
gen.add("sign_torque", str_t, 0, "string with the signs +++", "+++")

gen.add("goal_frame_id", str_t, 0, "frame_id for goals", "arm_right_tool_link")
gen.add("global_frame_id", str_t, 0, "global frame_id (world or base_footprint most probably)", "world")

gen.add("wbc_goal_topic", str_t, 0, "PoseStamped topic that will move the arm", "/whole_body_kinematic_controler/arm_right_tool_link_goal")
gen.add("pose_to_follow_topic", str_t, 0, "PoseStamped topic that will be the base position to go", "/pose_to_follow")
gen.add("debug_topic", str_t, 0, "PoseStamped topic that publishes the force-torqued pose for debugging purposes", "/force_torqued_pose")
gen.add("force_torque_topic", str_t, 0, "PoseStamped topic that publishes the force-torqued pose for debugging purposes", "/right_wrist_ft")


exit(gen.generate(PACKAGE, PACKAGE, "Handshake"))